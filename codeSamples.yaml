overlay: 1.0.0
info:
  title: CodeSamples overlay for ruby target
  version: 0.0.0
actions:
  - target: $["paths"]["/"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: hello
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hello()\n\nif ! res.res.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/accounts"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingAccounts
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_accounts.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/accounts"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createAccountingAccount
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_accounts.create(x_connection_token=\"<value>\", unified_accounting_account_input=::OpenApiSDK::Shared::UnifiedAccountingAccountInput.new(\n  name: \"Cash\",\n  description: \"Main cash account for daily operations\",\n  classification: \"Asset\",\n  type: \"Current Asset\",\n  status: \"Active\",\n  current_balance: 10000.0,\n  currency: \"USD\",\n  account_number: \"1000\",\n  parent_account: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  company_info_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  field_mappings: ::OpenApiSDK::Shared::UnifiedAccountingAccountInputFieldMappings.new(),\n), remote_data=false)\n\nif ! res.unified_accounting_account_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/accounts/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingAccount
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_accounts.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_account_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/addresses"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingAddress
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_addresses.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/addresses/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingAddress
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_addresses.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_address_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/attachments"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingAttachments
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_attachments.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/attachments"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createAccountingAttachment
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_attachments.create(x_connection_token=\"<value>\", unified_accounting_attachment_input=::OpenApiSDK::Shared::UnifiedAccountingAttachmentInput.new(\n  file_name: \"invoice.pdf\",\n  file_url: \"https://example.com/files/invoice.pdf\",\n  account_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  field_mappings: ::OpenApiSDK::Shared::UnifiedAccountingAttachmentInputFieldMappings.new(),\n), remote_data=false)\n\nif ! res.unified_accounting_attachment_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/attachments/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingAttachment
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_attachments.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_attachment_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/balancesheets"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingBalanceSheets
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_balancesheets.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/balancesheets/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingBalanceSheet
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_balancesheets.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_balancesheet_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/cashflowstatements"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingCashflowStatement
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_cashflowstatements.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/cashflowstatements/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingCashflowStatement
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_cashflowstatements.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_cashflowstatement_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/companyinfos"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingCompanyInfos
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_companyinfos.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/companyinfos/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingCompanyInfo
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_companyinfos.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_companyinfo_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/contacts"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingContacts
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_contacts.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/contacts"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createAccountingContact
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_contacts.create(x_connection_token=\"<value>\", unified_accounting_contact_input=::OpenApiSDK::Shared::UnifiedAccountingContactInput.new(\n  name: \"John Doe\",\n  is_supplier: true,\n  is_customer: false,\n  email_address: \"john.doe@example.com\",\n  tax_number: \"123456789\",\n  status: \"Active\",\n  currency: \"USD\",\n  remote_updated_at: \"2024-06-15T12:00:00Z\",\n  company_info_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  field_mappings: ::OpenApiSDK::Shared::UnifiedAccountingContactInputFieldMappings.new(),\n), remote_data=false)\n\nif ! res.unified_accounting_contact_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/contacts/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingContact
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_contacts.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_contact_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/creditnotes"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingCreditNote
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_creditnotes.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/creditnotes/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingCreditNote
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_creditnotes.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_creditnote_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/expenses"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingExpense
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_expenses.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/expenses"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createAccountingExpense
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_expenses.create(x_connection_token=\"<value>\", unified_accounting_expense_input=::OpenApiSDK::Shared::UnifiedAccountingExpenseInput.new(\n  transaction_date: DateTime.iso8601('2024-06-15T12:00:00Z'),\n  total_amount: 10000.0,\n  sub_total: 9000.0,\n  total_tax_amount: 1000.0,\n  currency: \"USD\",\n  exchange_rate: \"1.2\",\n  memo: \"Business lunch with client\",\n  account_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  contact_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  company_info_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  tracking_categories: [\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  ],\n  line_items: [\n    ::OpenApiSDK::Shared::LineItem.new(\n      name: \"Net Income\",\n      value: 100000.0,\n      type: \"Operating Activities\",\n      parent_item: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n      remote_id: \"report_item_1234\",\n      remote_generated_at: DateTime.iso8601('2024-07-01T12:00:00Z'),\n      company_info_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n      created_at: DateTime.iso8601('2024-06-15T12:00:00Z'),\n      modified_at: DateTime.iso8601('2024-06-15T12:00:00Z'),\n    ),\n  ],\n  field_mappings: ::OpenApiSDK::Shared::UnifiedAccountingExpenseInputFieldMappings.new(),\n), remote_data=false)\n\nif ! res.unified_accounting_expense_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/expenses/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingExpense
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_expenses.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_expense_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/incomestatements"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingIncomeStatement
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_incomestatements.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/incomestatements/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingIncomeStatement
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_incomestatements.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_incomestatement_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/invoices"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingInvoice
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_invoices.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/invoices"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createAccountingInvoice
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_invoices.create(x_connection_token=\"<value>\", unified_accounting_invoice_input=::OpenApiSDK::Shared::UnifiedAccountingInvoiceInput.new(\n  type: \"Sales\",\n  number: \"INV-001\",\n  issue_date: DateTime.iso8601('2024-06-15T12:00:00Z'),\n  due_date: DateTime.iso8601('2024-07-15T12:00:00Z'),\n  paid_on_date: DateTime.iso8601('2024-07-10T12:00:00Z'),\n  memo: \"Payment for services rendered\",\n  currency: \"USD\",\n  exchange_rate: \"1.2\",\n  total_discount: 1000.0,\n  sub_total: 10000.0,\n  status: \"Paid\",\n  total_tax_amount: 1000.0,\n  total_amount: 11000.0,\n  balance: 0.0,\n  contact_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  accounting_period_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  tracking_categories: [\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  ],\n  line_items: [\n    ::OpenApiSDK::Shared::LineItem.new(\n      name: \"Net Income\",\n      value: 100000.0,\n      type: \"Operating Activities\",\n      parent_item: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n      remote_id: \"report_item_1234\",\n      remote_generated_at: DateTime.iso8601('2024-07-01T12:00:00Z'),\n      company_info_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n      created_at: DateTime.iso8601('2024-06-15T12:00:00Z'),\n      modified_at: DateTime.iso8601('2024-06-15T12:00:00Z'),\n    ),\n  ],\n  field_mappings: ::OpenApiSDK::Shared::UnifiedAccountingInvoiceInputFieldMappings.new(),\n), remote_data=false)\n\nif ! res.unified_accounting_invoice_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/invoices/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingInvoice
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_invoices.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_invoice_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/items"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingItem
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_items.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/items/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingItem
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_items.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_item_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/journalentries"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingJournalEntry
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_journalentries.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/journalentries"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createAccountingJournalEntry
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_journalentries.create(x_connection_token=\"<value>\", unified_accounting_journalentry_input=::OpenApiSDK::Shared::UnifiedAccountingJournalentryInput.new(\n  transaction_date: DateTime.iso8601('2024-06-15T12:00:00Z'),\n  payments: [\n    \"payment1\",\n    \"payment2\",\n  ],\n  applied_payments: [\n    \"appliedPayment1\",\n    \"appliedPayment2\",\n  ],\n  memo: \"Monthly expense journal entry\",\n  currency: \"USD\",\n  exchange_rate: \"1.2\",\n  id_acc_company_info: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  journal_number: \"JE-001\",\n  tracking_categories: [\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  ],\n  id_acc_accounting_period: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  posting_status: \"Posted\",\n  line_items: [\n    ::OpenApiSDK::Shared::LineItem.new(\n      name: \"Net Income\",\n      value: 100000.0,\n      type: \"Operating Activities\",\n      parent_item: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n      remote_id: \"report_item_1234\",\n      remote_generated_at: DateTime.iso8601('2024-07-01T12:00:00Z'),\n      company_info_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n      created_at: DateTime.iso8601('2024-06-15T12:00:00Z'),\n      modified_at: DateTime.iso8601('2024-06-15T12:00:00Z'),\n    ),\n  ],\n  field_mappings: ::OpenApiSDK::Shared::UnifiedAccountingJournalentryInputFieldMappings.new(),\n), remote_data=false)\n\nif ! res.unified_accounting_journalentry_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/journalentries/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingJournalEntry
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_journalentries.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_journalentry_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/payments"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingPayment
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_payments.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/payments"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createAccountingPayment
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_payments.create(x_connection_token=\"<value>\", unified_accounting_payment_input=::OpenApiSDK::Shared::UnifiedAccountingPaymentInput.new(\n  invoice_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  transaction_date: DateTime.iso8601('2024-06-15T12:00:00Z'),\n  contact_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  account_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  currency: \"USD\",\n  exchange_rate: \"1.2\",\n  total_amount: 10000.0,\n  type: \"Credit Card\",\n  company_info_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  accounting_period_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  tracking_categories: [\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  ],\n  line_items: [\n    ::OpenApiSDK::Shared::LineItem.new(\n      name: \"Net Income\",\n      value: 100000.0,\n      type: \"Operating Activities\",\n      parent_item: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n      remote_id: \"report_item_1234\",\n      remote_generated_at: DateTime.iso8601('2024-07-01T12:00:00Z'),\n      company_info_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n      created_at: DateTime.iso8601('2024-06-15T12:00:00Z'),\n      modified_at: DateTime.iso8601('2024-06-15T12:00:00Z'),\n    ),\n  ],\n  field_mappings: ::OpenApiSDK::Shared::UnifiedAccountingPaymentInputFieldMappings.new(),\n), remote_data=false)\n\nif ! res.unified_accounting_payment_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/payments/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingPayment
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_payments.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_payment_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/phonenumbers"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingPhonenumber
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_phonenumbers.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/phonenumbers/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingPhonenumber
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_phonenumbers.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_phonenumber_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/purchaseorders"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingPurchaseOrder
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_purchaseorders.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/purchaseorders"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createAccountingPurchaseOrder
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_purchaseorders.create(x_connection_token=\"<value>\", unified_accounting_purchaseorder_input=::OpenApiSDK::Shared::UnifiedAccountingPurchaseorderInput.new(\n  status: \"Pending\",\n  issue_date: DateTime.iso8601('2024-06-15T12:00:00Z'),\n  purchase_order_number: \"PO-001\",\n  delivery_date: DateTime.iso8601('2024-07-15T12:00:00Z'),\n  delivery_address: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  customer: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  vendor: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  memo: \"Purchase order for Q3 inventory\",\n  company_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  total_amount: 100000.0,\n  currency: \"USD\",\n  exchange_rate: \"1.2\",\n  tracking_categories: [\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  ],\n  accounting_period_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  line_items: [\n    ::OpenApiSDK::Shared::LineItem.new(\n      name: \"Net Income\",\n      value: 100000.0,\n      type: \"Operating Activities\",\n      parent_item: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n      remote_id: \"report_item_1234\",\n      remote_generated_at: DateTime.iso8601('2024-07-01T12:00:00Z'),\n      company_info_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n      created_at: DateTime.iso8601('2024-06-15T12:00:00Z'),\n      modified_at: DateTime.iso8601('2024-06-15T12:00:00Z'),\n    ),\n  ],\n  field_mappings: ::OpenApiSDK::Shared::UnifiedAccountingPurchaseorderInputFieldMappings.new(),\n), remote_data=false)\n\nif ! res.unified_accounting_purchaseorder_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/purchaseorders/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingPurchaseOrder
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_purchaseorders.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_purchaseorder_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/taxrates"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingTaxRate
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_taxrates.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/taxrates/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingTaxRate
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_taxrates.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_taxrate_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/trackingcategories"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingTrackingCategorys
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_trackingcategories.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/trackingcategories/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingTrackingCategory
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_trackingcategories.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_trackingcategory_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/transactions"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingTransaction
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_transactions.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/transactions/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingTransaction
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_transactions.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_transaction_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/vendorcredits"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAccountingVendorCredit
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_vendorcredits.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/accounting/vendorcredits/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAccountingVendorCredit
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.accounting_vendorcredits.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_accounting_vendorcredit_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/activities"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAtsActivity
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_activities.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/activities"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createAtsActivity
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_activities.create(x_connection_token=\"<value>\", unified_ats_activity_input=::OpenApiSDK::Shared::UnifiedAtsActivityInput.new(\n  activity_type: \"NOTE\",\n  subject: \"Email subject\",\n  body: \"Dear Diana, I love you\",\n  visibility: \"PUBLIC\",\n  candidate_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  remote_created_at: DateTime.iso8601('2024-10-01T12:00:00Z'),\n  field_mappings: {\n    \"fav_dish\": \"broccoli\",\n    \"fav_color\": \"red\",\n  },\n), remote_data=false)\n\nif ! res.unified_ats_activity_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/activities/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAtsActivity
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_activities.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ats_activity_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/applications"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAtsApplication
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_applications.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/applications"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createAtsApplication
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_applications.create(x_connection_token=\"<value>\", unified_ats_application_input=::OpenApiSDK::Shared::UnifiedAtsApplicationInput.new(\n  applied_at: DateTime.iso8601('2024-10-01T12:00:00Z'),\n  rejected_at: DateTime.iso8601('2024-10-01T12:00:00Z'),\n  offers: [\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n    \"12345678-1234-1234-1234-123456789012\",\n  ],\n  source: \"Source Name\",\n  credited_to: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  current_stage: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  reject_reason: \"Candidate not experienced enough\",\n  candidate_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  job_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  field_mappings: {\n    \"fav_dish\": \"broccoli\",\n    \"fav_color\": \"red\",\n  },\n), remote_data=false)\n\nif ! res.unified_ats_application_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/applications/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAtsApplication
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_applications.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ats_application_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/attachments"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAtsAttachment
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_attachments.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/attachments"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createAtsAttachment
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_attachments.create(x_connection_token=\"<value>\", unified_ats_attachment_input=::OpenApiSDK::Shared::UnifiedAtsAttachmentInput.new(\n  file_url: \"https://example.com/file.pdf\",\n  file_name: \"file.pdf\",\n  attachment_type: \"RESUME\",\n  remote_created_at: DateTime.iso8601('2024-10-01T12:00:00Z'),\n  remote_modified_at: DateTime.iso8601('2024-10-01T12:00:00Z'),\n  candidate_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  field_mappings: {\n    \"fav_dish\": \"broccoli\",\n    \"fav_color\": \"red\",\n  },\n), remote_data=false)\n\nif ! res.unified_ats_attachment_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/attachments/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAtsAttachment
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_attachments.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ats_attachment_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/candidates"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAtsCandidate
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_candidates.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/candidates"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createAtsCandidate
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_candidates.create(x_connection_token=\"<value>\", unified_ats_candidate_input=::OpenApiSDK::Shared::UnifiedAtsCandidateInput.new(\n  first_name: \"Joe\",\n  last_name: \"Doe\",\n  company: \"Acme\",\n  title: \"Analyst\",\n  locations: \"New York\",\n  is_private: false,\n  email_reachable: true,\n  remote_created_at: DateTime.iso8601('2024-10-01T12:00:00Z'),\n  remote_modified_at: DateTime.iso8601('2024-10-01T12:00:00Z'),\n  last_interaction_at: DateTime.iso8601('2024-10-01T12:00:00Z'),\n  attachments: [\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  ],\n  applications: [\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  ],\n  tags: [\n    \"tag_1\",\n    \"tag_2\",\n  ],\n  urls: [\n    ::OpenApiSDK::Shared::Url.new(\n      url: \"mywebsite.com\",\n      url_type: \"WEBSITE\",\n    ),\n  ],\n  phone_numbers: [\n    ::OpenApiSDK::Shared::Phone.new(\n      phone_number: \"+33660688899\",\n      phone_type: \"WORK\",\n    ),\n  ],\n  email_addresses: [\n    ::OpenApiSDK::Shared::Email.new(\n      email_address: \"joedoe@gmail.com\",\n      email_address_type: \"WORK\",\n    ),\n  ],\n  field_mappings: {\n    \"fav_dish\": \"broccoli\",\n    \"fav_color\": \"red\",\n  },\n), remote_data=false)\n\nif ! res.unified_ats_candidate_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/candidates/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAtsCandidate
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_candidates.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ats_candidate_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/departments"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAtsDepartments
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_departments.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/departments/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAtsDepartment
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_departments.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ats_department_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/eeocs"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAtsEeocs
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_eeocs.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/eeocs/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAtsEeocs
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_eeocs.retrieve(x_connection_token=\"<value>\", id=\"<id>\", remote_data=false)\n\nif ! res.unified_ats_eeocs_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/interviews"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAtsInterview
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_interviews.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/interviews"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createAtsInterview
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_interviews.create(x_connection_token=\"<value>\", unified_ats_interview_input=::OpenApiSDK::Shared::UnifiedAtsInterviewInput.new(\n  status: \"SCHEDULED\",\n  application_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  job_interview_stage_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  organized_by: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  interviewers: [\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  ],\n  location: \"San Francisco\",\n  start_at: DateTime.iso8601('2024-10-01T12:00:00Z'),\n  end_at: DateTime.iso8601('2024-10-01T12:00:00Z'),\n  remote_created_at: DateTime.iso8601('2024-10-01T12:00:00Z'),\n  remote_updated_at: DateTime.iso8601('2024-10-01T12:00:00Z'),\n  field_mappings: {\n    \"fav_dish\": \"broccoli\",\n    \"fav_color\": \"red\",\n  },\n), remote_data=false)\n\nif ! res.unified_ats_interview_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/interviews/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAtsInterview
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_interviews.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ats_interview_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/jobinterviewstages"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAtsJobInterviewStage
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_jobinterviewstages.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/jobinterviewstages/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAtsJobInterviewStage
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_jobinterviewstages.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ats_jobinterviewstage_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/jobs"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAtsJob
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_jobs.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/jobs/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAtsJob
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_jobs.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ats_job_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/offers"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAtsOffer
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_offers.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/offers/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAtsOffer
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_offers.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ats_offer_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/offices"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAtsOffice
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_offices.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/offices/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAtsOffice
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_offices.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ats_office_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/rejectreasons"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAtsRejectReasons
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_rejectreasons.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/rejectreasons/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAtsRejectReason
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_rejectreasons.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ats_rejectreason_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/scorecards"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAtsScorecard
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_scorecards.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/scorecards/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAtsScorecard
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_scorecards.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ats_scorecard_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/tags"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAtsTags
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_tags.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/tags/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAtsTag
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_tags.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ats_tag_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/users"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listAtsUsers
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_users.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ats/users/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveAtsUser
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ats_users.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ats_user_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/auth/login"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: signIn
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Shared::LoginDto.new(\n  email: \"Oda.Treutel97@hotmail.com\",\n  password_hash: \"<value>\",\n)\n    \nres = s.auth_login.sign_in(req)\n\nif res.status_code == 200\n  # handle response\nend"
  - target: $["paths"]["/connections"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listConnections
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.connections.list()\n\nif ! res.connections.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/companies"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listCrmCompany
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_companies.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/companies"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createCrmCompany
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_companies.create(x_connection_token=\"<value>\", unified_crm_company_input=::OpenApiSDK::Shared::UnifiedCrmCompanyInput.new(\n  name: \"Acme\",\n  industry: \"ACCOUNTING\",\n  number_of_employees: 10.0,\n  user_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  email_addresses: [\n    ::OpenApiSDK::Shared::Email.new(\n      email_address: \"acme@gmail.com\",\n      email_address_type: \"WORK\",\n    ),\n  ],\n  addresses: [\n    ::OpenApiSDK::Shared::Address.new(\n      street_1: \"5th Avenue\",\n      street_2: \"Street 2\",\n      city: \"New York\",\n      state: \"NY\",\n      postal_code: \"10001\",\n      country: \"USA\",\n      address_type: \"WORK\",\n      owner_type: \"<value>\",\n    ),\n  ],\n  phone_numbers: [\n    ::OpenApiSDK::Shared::Phone.new(\n      phone_number: \"+33660606067\",\n      phone_type: \"WORK\",\n    ),\n  ],\n  field_mappings: {\n    \"fav_dish\": \"broccoli\",\n    \"fav_color\": \"red\",\n  },\n), remote_data=false)\n\nif ! res.unified_crm_company_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/companies/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveCrmCompany
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_companies.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_crm_company_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/contacts"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listCrmContacts
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_contacts.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/contacts"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createCrmContact
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_contacts.create(x_connection_token=\"<value>\", unified_crm_contact_input=::OpenApiSDK::Shared::UnifiedCrmContactInput.new(\n  first_name: \"John\",\n  last_name: \"Doe\",\n  email_addresses: [\n    ::OpenApiSDK::Shared::Email.new(\n      email_address: \"Jena.Nienow28@yahoo.com\",\n      email_address_type: \"<value>\",\n    ),\n  ],\n  phone_numbers: [\n    ::OpenApiSDK::Shared::Phone.new(\n      phone_number: \"1-809-839-8041\",\n      phone_type: \"<value>\",\n    ),\n  ],\n  addresses: [\n    ::OpenApiSDK::Shared::Address.new(\n      street_1: \"5th Avenue\",\n      street_2: \"Street 2\",\n      city: \"Anytown\",\n      state: \"CA\",\n      postal_code: \"10001\",\n      country: \"USA\",\n      address_type: \"PERSONAL\",\n      owner_type: \"<value>\",\n    ),\n  ],\n  user_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  field_mappings: {\n    \"fav_dish\": \"broccoli\",\n    \"fav_color\": \"red\",\n  },\n), remote_data=false)\n\nif ! res.unified_crm_contact_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/contacts/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveCrmContact
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_contacts.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_crm_contact_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/deals"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listCrmDeals
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_deals.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/deals"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createCrmDeal
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_deals.create(x_connection_token=\"<value>\", unified_crm_deal_input=::OpenApiSDK::Shared::UnifiedCrmDealInput.new(\n  name: \"Huge Contract with Acme\",\n  description: \"Contract with Sales Operations Team\",\n  amount: 1000.0,\n  user_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  stage_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  company_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  field_mappings: {\n    \"fav_dish\": \"broccoli\",\n    \"fav_color\": \"red\",\n  },\n), remote_data=false)\n\nif ! res.unified_crm_deal_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/deals/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveCrmDeal
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_deals.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_crm_deal_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/engagements"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listCrmEngagements
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_engagements.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/engagements"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createCrmEngagement
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_engagements.create(x_connection_token=\"<value>\", unified_crm_engagement_input=::OpenApiSDK::Shared::UnifiedCrmEngagementInput.new(\n  content: \"Meeting call with CTO\",\n  direction: \"INBOUND\",\n  subject: \"Technical features planning\",\n  start_at: DateTime.iso8601('2024-10-01T12:00:00Z'),\n  end_time: DateTime.iso8601('2024-10-01T22:00:00Z'),\n  type: \"MEETING\",\n  user_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  company_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  contacts: [\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  ],\n  field_mappings: {\n    \"fav_dish\": \"broccoli\",\n    \"fav_color\": \"red\",\n  },\n), remote_data=false)\n\nif ! res.unified_crm_engagement_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/engagements/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveCrmEngagement
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_engagements.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_crm_engagement_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/notes"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listCrmNote
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_notes.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/notes"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createCrmNote
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_notes.create(x_connection_token=\"<value>\", unified_crm_note_input=::OpenApiSDK::Shared::UnifiedCrmNoteInput.new(\n  content: \"My notes taken during the meeting\",\n  user_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  company_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  contact_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  deal_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  field_mappings: {\n    \"fav_dish\": \"broccoli\",\n    \"fav_color\": \"red\",\n  },\n), remote_data=false)\n\nif ! res.unified_crm_note_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/notes/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveCrmNote
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_notes.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_crm_note_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/stages"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listCrmStages
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_stages.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/stages/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveCrmStage
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_stages.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_crm_stage_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/tasks"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listCrmTask
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_tasks.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/tasks"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createCrmTask
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_tasks.create(x_connection_token=\"<value>\", unified_crm_task_input=::OpenApiSDK::Shared::UnifiedCrmTaskInput.new(\n  subject: \"Answer customers\",\n  content: \"Prepare email campaign\",\n  status: \"PENDING\",\n  due_date: \"2024-10-01T12:00:00Z\",\n  finished_date: \"2024-10-01T12:00:00Z\",\n  user_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  company_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  deal_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  field_mappings: {\n    \"fav_dish\": \"broccoli\",\n    \"fav_color\": \"red\",\n  },\n), remote_data=false)\n\nif ! res.unified_crm_task_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/tasks/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveCrmTask
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_tasks.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_crm_task_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/users"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listCrmUsers
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_users.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/crm/users/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveCrmUser
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.crm_users.retrieve(x_connection_token=\"<value>\", id=\"b008e199-eda9-4629-bd41-a01b6195864a\", remote_data=true)\n\nif ! res.unified_crm_user_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ecommerce/customers"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listEcommerceCustomers
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ecommerce_customers.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ecommerce/customers/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveEcommerceCustomer
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ecommerce_customers.retrieve(x_connection_token=\"<value>\", id=\"<id>\", remote_data=false)\n\nif ! res.unified_ecommerce_customer_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ecommerce/fulfillments"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listEcommerceFulfillments
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ecommerce_fulfillments.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ecommerce/fulfillments/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveEcommerceFulfillment
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ecommerce_fulfillments.retrieve(x_connection_token=\"<value>\", id=\"<id>\", remote_data=false)\n\nif ! res.unified_ecommerce_fulfillment_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ecommerce/orders"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listEcommerceOrders
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ecommerce_orders.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ecommerce/orders"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createEcommerceOrder
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ecommerce_orders.create(x_connection_token=\"<value>\", unified_ecommerce_order_input=::OpenApiSDK::Shared::UnifiedEcommerceOrderInput.new(\n  order_status: \"UNSHIPPED\",\n  order_number: \"19823838833\",\n  payment_status: \"SUCCESS\",\n  currency: \"AUD\",\n  total_price: 300.0,\n  total_discount: 10.0,\n  total_shipping: 120.0,\n  total_tax: 120.0,\n  fulfillment_status: \"PENDING\",\n  customer_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  items: [\n    ::OpenApiSDK::Shared::LineItem.new(\n      name: \"Net Income\",\n      value: 100000.0,\n      type: \"Operating Activities\",\n      parent_item: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n      remote_id: \"12345\",\n      remote_generated_at: DateTime.iso8601('2024-07-01T12:00:00Z'),\n      company_info_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n      created_at: DateTime.iso8601('2024-06-15T12:00:00Z'),\n      modified_at: DateTime.iso8601('2024-06-15T12:00:00Z'),\n    ),\n  ],\n  field_mappings: ::OpenApiSDK::Shared::UnifiedEcommerceOrderInputFieldMappings.new(),\n), remote_data=false)\n\nif ! res.unified_ecommerce_order_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ecommerce/orders/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveEcommerceOrder
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ecommerce_orders.retrieve(x_connection_token=\"<value>\", id=\"<id>\", remote_data=false)\n\nif ! res.unified_ecommerce_order_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ecommerce/products"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listEcommerceProducts
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ecommerce_products.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ecommerce/products"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createEcommerceProduct
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ecommerce_products.create(x_connection_token=\"<value>\", unified_ecommerce_product_input=::OpenApiSDK::Shared::UnifiedEcommerceProductInput.new(\n  product_url: \"https://product_url/tee\",\n  product_type: \"teeshirt\",\n  product_status: \"ACTIVE\",\n  images_urls: [\n    \"https://myproduct/image\",\n  ],\n  description: \"best tee ever\",\n  vendor: \"vendor_extern\",\n  variants: [\n    ::OpenApiSDK::Shared::Variant.new(),\n  ],\n  tags: [\n    \"tag_1\",\n  ],\n  field_mappings: ::OpenApiSDK::Shared::UnifiedEcommerceProductInputFieldMappings.new(),\n), remote_data=false)\n\nif ! res.unified_ecommerce_product_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ecommerce/products/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveEcommerceProduct
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ecommerce_products.retrieve(x_connection_token=\"<value>\", id=\"<id>\", remote_data=false)\n\nif ! res.unified_ecommerce_product_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/events"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: getPanoraCoreEvents
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.events.get_panora_core_events(page=5232.51, limit=1895.12)\n\nif ! res.event_responses.nil?\n  # handle response\nend"
  - target: $["paths"]["/field_mappings"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: defineCustomField
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Shared::CustomFieldCreateDto.new(\n  object_type_owner: ::OpenApiSDK::Shared::CustomFieldCreateDtoObjectTypeOwner::COMPANY,\n  name: \"my_favorite_dish\",\n  description: \"Favorite Dish\",\n  data_type: ::OpenApiSDK::Shared::CustomFieldCreateDtoDataType::STRING,\n  source_custom_field_id: \"id_1\",\n  source_provider: \"hubspot\",\n  linked_user_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n)\n    \nres = s.field_mappings.define_custom_field(req)\n\nif ! res.custom_field_response.nil?\n  # handle response\nend"
  - target: $["paths"]["/field_mappings/attributes"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: getFieldMappings
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.field_mappings.get_field_mappings()\n\nif res.status_code == 200\n  # handle response\nend"
  - target: $["paths"]["/field_mappings/define"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: definitions
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Shared::DefineTargetFieldDto.new(\n  object_type_owner: ::OpenApiSDK::Shared::ObjectTypeOwner::COMPANY,\n  name: \"fav_dish\",\n  description: \"My favorite dish\",\n  data_type: ::OpenApiSDK::Shared::DataType::STRING,\n)\n    \nres = s.field_mappings.definitions(req)\n\nif ! res.custom_field_response.nil?\n  # handle response\nend"
  - target: $["paths"]["/field_mappings/entities"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: getFieldMappingsEntities
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.field_mappings.get_field_mappings_entities()\n\nif res.status_code == 200\n  # handle response\nend"
  - target: $["paths"]["/field_mappings/map"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: map
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Shared::MapFieldToProviderDto.new(\n  attribute_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  source_custom_field_id: \"id_1\",\n  source_provider: \"hubspot\",\n  linked_user_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n)\n    \nres = s.field_mappings.map(req)\n\nif ! res.custom_field_response.nil?\n  # handle response\nend"
  - target: $["paths"]["/field_mappings/values"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: getFieldMappingValues
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.field_mappings.get_field_mapping_values()\n\nif res.status_code == 200\n  # handle response\nend"
  - target: $["paths"]["/filestorage/files"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listFilestorageFile
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.filestorage_files.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/filestorage/files"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createFilestorageFile
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.filestorage_files.create(x_connection_token=\"<value>\", unified_filestorage_file_input=::OpenApiSDK::Shared::UnifiedFilestorageFileInput.new(\n  name: \"my_paris_photo.png\",\n  file_url: \"https://example.com/my_paris_photo.png\",\n  mime_type: \"application/pdf\",\n  size: \"1024\",\n  folder_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  permission: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  shared_link: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  field_mappings: {\n    \"fav_dish\": \"broccoli\",\n    \"fav_color\": \"red\",\n  },\n), remote_data=false)\n\nif ! res.unified_filestorage_file_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/filestorage/files/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveFilestorageFile
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.filestorage_files.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_filestorage_file_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/filestorage/folders"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listFilestorageFolder
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.filestorage_folders.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/filestorage/folders"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createFilestorageFolder
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.filestorage_folders.create(x_connection_token=\"<value>\", unified_filestorage_folder_input=::OpenApiSDK::Shared::UnifiedFilestorageFolderInput.new(\n  name: \"school\",\n  size: \"2048\",\n  folder_url: \"https://example.com/school\",\n  description: \"All things school related\",\n  drive_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  parent_folder_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  shared_link: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  permission: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  field_mappings: {\n    \"fav_dish\": \"broccoli\",\n    \"fav_color\": \"red\",\n  },\n), remote_data=false)\n\nif ! res.unified_filestorage_folder_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/filestorage/folders/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveFilestorageFolder
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.filestorage_folders.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_filestorage_folder_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/filestorage/groups"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listFilestorageGroup
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.filestorage_groups.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/filestorage/groups/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveFilestorageGroup
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.filestorage_groups.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_filestorage_group_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/filestorage/users"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listFilestorageUsers
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.filestorage_users.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/filestorage/users/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveFilestorageUser
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.filestorage_users.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_filestorage_user_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/health"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: health
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.health()\n\nif ! res.number.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/bankinfos"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listHrisBankInfo
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_bankinfos.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/bankinfos/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveHrisBankInfo
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_bankinfos.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_hris_bankinfo_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/benefits"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listHrisBenefits
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_benefits.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/benefits/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveHrisBenefit
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_benefits.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_hris_benefit_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/companies"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listHrisCompanies
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_companies.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/companies/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveHrisCompany
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_companies.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_hris_company_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/dependents"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listHrisDependents
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_dependents.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/dependents/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveHrisDependent
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_dependents.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_hris_dependent_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/employeepayrollruns"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listHrisEmployeePayrollRun
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_employeepayrollruns.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/employeepayrollruns/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveHrisEmployeePayrollRun
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_employeepayrollruns.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_hris_employeepayrollrun_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/employees"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listHrisEmployees
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_employees.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/employees"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createHrisEmployee
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_employees.create(x_connection_token=\"<value>\", unified_hris_employee_input=::OpenApiSDK::Shared::UnifiedHrisEmployeeInput.new(\n  groups: [\n    \"Group1\",\n    \"Group2\",\n  ],\n  locations: [\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  ],\n  employee_number: \"EMP001\",\n  company_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  first_name: \"John\",\n  last_name: \"Doe\",\n  preferred_name: \"Johnny\",\n  display_full_name: \"John Doe\",\n  username: \"johndoe\",\n  work_email: \"john.doe@company.com\",\n  personal_email: \"john.doe@personal.com\",\n  mobile_phone_number: \"+1234567890\",\n  employments: [\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  ],\n  ssn: \"123-45-6789\",\n  gender: \"MALE\",\n  ethnicity: \"AMERICAN_INDIAN_OR_ALASKA_NATIVE\",\n  marital_status: \"Married\",\n  date_of_birth: DateTime.iso8601('1990-01-01'),\n  start_date: DateTime.iso8601('2020-01-01'),\n  employment_status: \"ACTIVE\",\n  termination_date: DateTime.iso8601('2025-01-01'),\n  avatar_url: \"https://example.com/avatar.jpg\",\n  manager_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  field_mappings: ::OpenApiSDK::Shared::UnifiedHrisEmployeeInputFieldMappings.new(),\n), remote_data=false)\n\nif ! res.unified_hris_employee_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/employees/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveHrisEmployee
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_employees.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_hris_employee_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/employerbenefits"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listHrisEmployerBenefits
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_employerbenefits.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/employerbenefits/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveHrisEmployerBenefit
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_employerbenefits.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_hris_employerbenefit_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/employments"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listHrisEmployments
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_employments.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/employments/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveHrisEmployment
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_employments.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_hris_employment_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/groups"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listHrisGroups
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_groups.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/groups/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveHrisGroup
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_groups.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_hris_group_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/locations"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listHrisLocations
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_locations.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/locations/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveHrisLocation
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_locations.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_hris_location_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/paygroups"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listHrisPaygroups
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_paygroups.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/paygroups/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveHrisPaygroup
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_paygroups.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_hris_paygroup_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/payrollruns"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listHrisPayrollRuns
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_payrollruns.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/payrollruns/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveHrisPayrollRun
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_payrollruns.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_hris_payrollrun_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/timeoffbalances"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listHrisTimeoffbalances
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_timeoffbalances.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/timeoffbalances/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveHrisTimeoffbalance
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_timeoffbalances.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_hris_timeoffbalance_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/timeoffs"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listHrisTimeoffs
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_timeoffs.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/timeoffs"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createHrisTimeoff
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_timeoffs.create(x_connection_token=\"<value>\", unified_hris_timeoff_input=::OpenApiSDK::Shared::UnifiedHrisTimeoffInput.new(\n  employee: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  approver: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  status: \"REQUESTED\",\n  employee_note: \"Annual vacation\",\n  units: \"DAYS\",\n  amount: 5.0,\n  request_type: \"VACATION\",\n  start_time: DateTime.iso8601('2024-07-01T09:00:00Z'),\n  end_time: DateTime.iso8601('2024-07-05T17:00:00Z'),\n  field_mappings: ::OpenApiSDK::Shared::UnifiedHrisTimeoffInputFieldMappings.new(),\n), remote_data=false)\n\nif ! res.unified_hris_timeoff_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/timeoffs/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveHrisTimeoff
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_timeoffs.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_hris_timeoff_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/timesheetentries"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listHrisTimesheetentries
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_timesheetentries.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/timesheetentries"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createHrisTimesheetentry
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_timesheetentries.create(x_connection_token=\"<value>\", unified_hris_timesheet_entry_input=::OpenApiSDK::Shared::UnifiedHrisTimesheetEntryInput.new(\n  hours_worked: 40.0,\n  start_time: DateTime.iso8601('2024-10-01T08:00:00Z'),\n  end_time: DateTime.iso8601('2024-10-01T16:00:00Z'),\n  employee_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  remote_was_deleted: false,\n  field_mappings: ::OpenApiSDK::Shared::UnifiedHrisTimesheetEntryInputFieldMappings.new(),\n), remote_data=false)\n\nif ! res.unified_hris_timesheet_entry_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/hris/timesheetentries/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveHrisTimesheetentry
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.hris_timesheetentries.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_hris_timesheet_entry_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/linked_users"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listLinkedUsers
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.linked_users.list()\n\nif ! res.linked_user_responses.nil?\n  # handle response\nend"
  - target: $["paths"]["/linked_users"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createLinkedUser
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Shared::CreateLinkedUserDto.new(\n  linked_user_origin_id: \"id_1\",\n  alias_: \"acme\",\n)\n    \nres = s.linked_users.create(req)\n\nif ! res.linked_user_response.nil?\n  # handle response\nend"
  - target: $["paths"]["/linked_users/batch"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: importBatch
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Shared::CreateBatchLinkedUserDto.new(\n  linked_user_origin_ids: [\n    \"id_1\",\n  ],\n  alias_: \"acme\",\n)\n    \nres = s.linked_users.import_batch(req)\n\nif ! res.linked_user_responses.nil?\n  # handle response\nend"
  - target: $["paths"]["/linked_users/fromRemoteId"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: remoteId
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.linked_users.remote_id(remote_id=\"id_1\")\n\nif ! res.linked_user_response.nil?\n  # handle response\nend"
  - target: $["paths"]["/linked_users/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveLinkedUser
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.linked_users.retrieve(id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\")\n\nif ! res.linked_user_response.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/actions"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listMarketingautomationAction
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_actions.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/actions"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createMarketingautomationAction
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_actions.create(x_connection_token=\"<value>\", unified_marketingautomation_action_input=::OpenApiSDK::Shared::UnifiedMarketingautomationActionInput.new(), remote_data=false)\n\nif ! res.unified_marketingautomation_action_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/actions/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveMarketingautomationAction
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_actions.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_marketingautomation_action_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/automations"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listMarketingautomationAutomations
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_automations.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/automations"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createMarketingautomationAutomation
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_automations.create(x_connection_token=\"<value>\", unified_marketingautomation_automation_input=::OpenApiSDK::Shared::UnifiedMarketingautomationAutomationInput.new(), remote_data=false)\n\nif ! res.unified_marketingautomation_automation_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/automations/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveMarketingautomationAutomation
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_automations.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_marketingautomation_automation_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/campaigns"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listMarketingautomationCampaigns
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_campaigns.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/campaigns"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createMarketingautomationCampaign
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_campaigns.create(x_connection_token=\"<value>\", unified_marketingautomation_campaign_input=::OpenApiSDK::Shared::UnifiedMarketingautomationCampaignInput.new(), remote_data=false)\n\nif ! res.unified_marketingautomation_campaign_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/campaigns/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveMarketingautomationCampaign
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_campaigns.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_marketingautomation_campaign_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/contacts"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listMarketingAutomationContacts
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_contacts.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/contacts"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createMarketingAutomationContact
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_contacts.create(x_connection_token=\"<value>\", unified_marketingautomation_contact_input=::OpenApiSDK::Shared::UnifiedMarketingautomationContactInput.new(), remote_data=false)\n\nif ! res.unified_marketingautomation_contact_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/contacts/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveMarketingAutomationContact
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_contacts.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_marketingautomation_contact_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/emails"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listMarketingautomationEmails
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_emails.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/emails/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveMarketingautomationEmail
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_emails.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_marketingautomation_email_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/events"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listMarketingAutomationEvents
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_events.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/events/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveMarketingautomationEvent
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_events.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_marketingautomation_event_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/lists"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listMarketingautomationLists
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_lists.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/lists"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createMarketingautomationList
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_lists.create(x_connection_token=\"<value>\", unified_marketingautomation_list_input=::OpenApiSDK::Shared::UnifiedMarketingautomationListInput.new(), remote_data=false)\n\nif ! res.unified_marketingautomation_list_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/lists/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveMarketingautomationList
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_lists.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_marketingautomation_list_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/messages"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listMarketingautomationMessages
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_messages.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/messages/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveMarketingautomationMessage
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_messages.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_marketingautomation_message_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/templates"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listMarketingautomationTemplates
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_templates.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/templates"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createMarketingautomationTemplate
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_templates.create(x_connection_token=\"<value>\", unified_marketingautomation_template_input=::OpenApiSDK::Shared::UnifiedMarketingautomationTemplateInput.new(), remote_data=false)\n\nif ! res.unified_marketingautomation_template_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/templates/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveMarketingautomationTemplate
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_templates.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_marketingautomation_template_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/users"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listMarketingAutomationUsers
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_users.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/marketingautomation/users/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveMarketingAutomationUser
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.marketingautomation_users.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_marketingautomation_user_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/passthrough"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: request
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.passthrough.request(x_connection_token=\"<value>\", pass_through_request_dto=::OpenApiSDK::Shared::PassThroughRequestDto.new(\n  method: ::OpenApiSDK::Shared::PassThroughRequestDtoMethod::GET,\n  path: \"/dev\",\n))\n\nif ! res.two_hundred_application_json_object.nil?\n  # handle response\nend"
  - target: $["paths"]["/passthrough/{retryId}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: getRetriedRequestResponse
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.passthrough_retryid.get_retried_request_response(retry_id=\"<value>\")\n\nif res.status_code == 200\n  # handle response\nend"
  - target: $["paths"]["/projects"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: getProjects
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.projects.get_projects()\n\nif ! res.project_responses.nil?\n  # handle response\nend"
  - target: $["paths"]["/projects"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createProject
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Shared::CreateProjectDto.new(\n  name: \"Project Name\",\n  id_organization: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  id_user: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n)\n    \nres = s.projects.create(req)\n\nif ! res.project_response.nil?\n  # handle response\nend"
  - target: $["paths"]["/rag/query"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: query
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.rag_query.query(x_connection_token=\"<value>\", query_body=::OpenApiSDK::Shared::QueryBody.new(\n  query: \"When does Panora incorporated?\",\n  top_k: 3,\n))\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/sync/pull-frequencies"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: getPullFrequency
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.sync.get_pull_frequency()\n\nif ! res.update_pull_frequency_dto.nil?\n  # handle response\nend"
  - target: $["paths"]["/sync/pull-frequencies"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: updatePullFrequency
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Shared::UpdatePullFrequencyDto.new(\n  crm: 1800.0,\n  ats: 3600.0,\n  hris: 7200.0,\n  accounting: 14400.0,\n  filestorage: 28800.0,\n  ecommerce: 43200.0,\n  ticketing: 86400.0,\n)\n    \nres = s.sync.update_pull_frequency(req)\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/sync/resync"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: resync
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.sync.resync()\n\nif ! res.resync_status_dto.nil?\n  # handle response\nend"
  - target: $["paths"]["/sync/status/{vertical}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: status
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.sync.status(vertical=::OpenApiSDK::Operations::Vertical::TICKETING)\n\nif res.status_code == 200\n  # handle response\nend"
  - target: $["paths"]["/ticketing/accounts"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listTicketingAccount
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_accounts.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/accounts/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveTicketingAccount
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_accounts.retrieve(x_connection_token=\"<value>\", id=\"<id>\", remote_data=false)\n\nif ! res.unified_ticketing_account_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/attachments"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listTicketingAttachments
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_attachments.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/attachments"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createTicketingAttachment
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_attachments.create(x_connection_token=\"<value>\", unified_ticketing_attachment_input=::OpenApiSDK::Shared::UnifiedTicketingAttachmentInput.new(\n  file_name: \"features_planning.pdf\",\n  file_url: \"https://example.com/features_planning.pdf\",\n  uploader: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  ticket_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  comment_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  field_mappings: {\n    \"fav_dish\": \"broccoli\",\n    \"fav_color\": \"red\",\n  },\n), remote_data=false)\n\nif ! res.unified_ticketing_attachment_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/attachments/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveTicketingAttachment
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_attachments.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ticketing_attachment_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/collections"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listTicketingCollections
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_collections.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/collections/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveCollection
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_collections.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ticketing_collection_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/comments"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listTicketingComments
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_comments.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/comments"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createTicketingComment
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_comments.create(x_connection_token=\"<value>\", unified_ticketing_comment_input=::OpenApiSDK::Shared::UnifiedTicketingCommentInput.new(\n  body: \"Assigned to Eric !\",\n  html_body: \"<p>Assigned to Eric !</p>\",\n  is_private: false,\n  creator_type: \"USER\",\n  ticket_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  contact_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  user_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  attachments: [\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  ],\n), remote_data=false)\n\nif ! res.unified_ticketing_comment_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/comments/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveTicketingComment
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_comments.retrieve(x_connection_token=\"<value>\", id=\"<id>\", remote_data=false)\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/contacts"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listTicketingContacts
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_contacts.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/contacts/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveTicketingContact
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_contacts.retrieve(x_connection_token=\"<value>\", id=\"<id>\", remote_data=false)\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/tags"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listTicketingTags
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_tags.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/tags/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveTicketingTag
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_tags.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ticketing_tag_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/teams"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listTicketingTeams
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_teams.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/teams/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveTicketingTeam
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_teams.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ticketing_team_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/tickets"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listTicketingTicket
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_tickets.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/tickets"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createTicketingTicket
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_tickets.create(x_connection_token=\"<value>\", unified_ticketing_ticket_input=::OpenApiSDK::Shared::UnifiedTicketingTicketInput.new(\n  name: \"Customer Service Inquiry\",\n  status: \"OPEN\",\n  description: \"Help customer\",\n  due_date: DateTime.iso8601('2024-10-01T12:00:00Z'),\n  type: \"BUG\",\n  parent_ticket: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  collections: [\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  ],\n  tags: [\n    \"my_tag\",\n    \"urgent_tag\",\n  ],\n  completed_at: DateTime.iso8601('2024-10-01T12:00:00Z'),\n  priority: \"HIGH\",\n  assigned_to: [\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  ],\n  comment: ::OpenApiSDK::Shared::UnifiedTicketingTicketInputComment.new(\n    body: \"Assigned to Eric !\",\n    html_body: \"<p>Assigned to Eric !</p>\",\n    is_private: false,\n    creator_type: \"USER\",\n    ticket_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n    contact_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n    user_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n    attachments: [\n      \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n    ],\n  ),\n  account_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  contact_id: \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  attachments: [\n    \"801f9ede-c698-4e66-a7fc-48d19eebaa4f\",\n  ],\n  field_mappings: {\n    \"fav_dish\": \"broccoli\",\n    \"fav_color\": \"red\",\n  },\n), remote_data=false)\n\nif ! res.unified_ticketing_ticket_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/tickets/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveTicketingTicket
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_tickets.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ticketing_ticket_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/users"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listTicketingUsers
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_users.list(x_connection_token=\"<value>\", remote_data=true, limit=10.0, cursor=\"1b8b05bb-5273-4012-b520-8657b0b90874\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/ticketing/users/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: retrieveTicketingUser
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.ticketing_users.retrieve(x_connection_token=\"<value>\", id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\", remote_data=false)\n\nif ! res.unified_ticketing_user_output.nil?\n  # handle response\nend"
  - target: $["paths"]["/webhooks"]["get"]
    update:
      x-codeSamples:
        - lang: ruby
          label: listWebhooks
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.webhooks.list()\n\nif ! res.webhook_responses.nil?\n  # handle response\nend"
  - target: $["paths"]["/webhooks"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: createWebhookPublic
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Shared::WebhookDto.new(\n  url: \"https://acme.com/webhook_receiver\",\n  description: \"Webhook to receive connection events\",\n  scope: [\n    \"connection.created\",\n  ],\n)\n    \nres = s.webhooks.create(req)\n\nif ! res.webhook_response.nil?\n  # handle response\nend"
  - target: $["paths"]["/webhooks/verifyEvent"]["post"]
    update:
      x-codeSamples:
        - lang: ruby
          label: verifyEvent
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Shared::SignatureVerificationDto.new(\n  payload: {\n    \"key\": \"<value>\",\n  },\n  signature: \"<value>\",\n  secret: \"<value>\",\n)\n    \nres = s.webhooks.verify_event(req)\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/webhooks/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: ruby
          label: delete
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.webhooks.delete(id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\")\n\nif ! res.webhook_response.nil?\n  # handle response\nend"
  - target: $["paths"]["/webhooks/{id}"]["put"]
    update:
      x-codeSamples:
        - lang: ruby
          label: updateStatus
          source: "require 'panora'\n\n\ns = ::OpenApiSDK::Panora.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    api_key: \"<YOUR_API_KEY_HERE>\",\n  )\n)\n\n    \nres = s.webhooks.update_status(id=\"801f9ede-c698-4e66-a7fc-48d19eebaa4f\")\n\nif ! res.webhook_response.nil?\n  # handle response\nend"
