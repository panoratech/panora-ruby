# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class UnifiedAtsEeocsOutput < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :created_at, ::OpenApiSDK::Shared::UnifiedAtsEeocsOutputCreatedAt, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('created_at') } }

      field :field_mappings, ::OpenApiSDK::Shared::UnifiedAtsEeocsOutputFieldMappings, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('field_mappings') } }

      field :modified_at, ::OpenApiSDK::Shared::UnifiedAtsEeocsOutputModifiedAt, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('modified_at') } }

      field :remote_data, ::OpenApiSDK::Shared::UnifiedAtsEeocsOutputRemoteData, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('remote_data') } }
      # The UUID of the candidate
      field :candidate_id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('candidate_id') } }
      # The disability status of the candidate
      field :disability_status, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('disability_status') } }
      # The gender of the candidate
      field :gender, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('gender') } }
      # The UUID of the EEOC
      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('id') } }
      # The race of the candidate
      field :race, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('race') } }
      # The remote ID of the EEOC in the context of the 3rd Party
      field :remote_id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('remote_id') } }
      # The submission date of the EEOC
      field :submitted_at, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('submitted_at'), 'decoder': Utils.datetime_from_iso_format(true) } }
      # The veteran status of the candidate
      field :veteran_status, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('veteran_status') } }


      sig { params(created_at: ::OpenApiSDK::Shared::UnifiedAtsEeocsOutputCreatedAt, field_mappings: ::OpenApiSDK::Shared::UnifiedAtsEeocsOutputFieldMappings, modified_at: ::OpenApiSDK::Shared::UnifiedAtsEeocsOutputModifiedAt, remote_data: ::OpenApiSDK::Shared::UnifiedAtsEeocsOutputRemoteData, candidate_id: T.nilable(::String), disability_status: T.nilable(::String), gender: T.nilable(::String), id: T.nilable(::String), race: T.nilable(::String), remote_id: T.nilable(::String), submitted_at: T.nilable(::DateTime), veteran_status: T.nilable(::String)).void }
      def initialize(created_at: nil, field_mappings: nil, modified_at: nil, remote_data: nil, candidate_id: nil, disability_status: nil, gender: nil, id: nil, race: nil, remote_id: nil, submitted_at: nil, veteran_status: nil)
        @created_at = created_at
        @field_mappings = field_mappings
        @modified_at = modified_at
        @remote_data = remote_data
        @candidate_id = candidate_id
        @disability_status = disability_status
        @gender = gender
        @id = id
        @race = race
        @remote_id = remote_id
        @submitted_at = submitted_at
        @veteran_status = veteran_status
      end
    end
  end
end
