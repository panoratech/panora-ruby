# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class UnifiedCrmDealOutput < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The amount of the deal
      field :amount, ::Float, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('amount') } }

      field :created_at, ::OpenApiSDK::Shared::UnifiedCrmDealOutputCreatedAt, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('created_at') } }
      # The description of the deal
      field :description, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('description') } }

      field :field_mappings, ::OpenApiSDK::Shared::UnifiedCrmDealOutputFieldMappings, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('field_mappings') } }

      field :modified_at, ::OpenApiSDK::Shared::UnifiedCrmDealOutputModifiedAt, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('modified_at') } }
      # The name of the deal
      field :name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('name') } }

      field :remote_data, ::OpenApiSDK::Shared::UnifiedCrmDealOutputRemoteData, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('remote_data') } }
      # The UUID of the company tied to the deal
      field :company_id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('company_id') } }
      # The UUID of the deal
      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('id') } }
      # The id of the deal in the context of the Crm 3rd Party
      field :remote_id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('remote_id') } }
      # The UUID of the stage of the deal
      field :stage_id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('stage_id') } }
      # The UUID of the user who is on the deal
      field :user_id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('user_id') } }


      sig { params(amount: ::Float, created_at: ::OpenApiSDK::Shared::UnifiedCrmDealOutputCreatedAt, description: ::String, field_mappings: ::OpenApiSDK::Shared::UnifiedCrmDealOutputFieldMappings, modified_at: ::OpenApiSDK::Shared::UnifiedCrmDealOutputModifiedAt, name: ::String, remote_data: ::OpenApiSDK::Shared::UnifiedCrmDealOutputRemoteData, company_id: T.nilable(::String), id: T.nilable(::String), remote_id: T.nilable(::String), stage_id: T.nilable(::String), user_id: T.nilable(::String)).void }
      def initialize(amount: nil, created_at: nil, description: nil, field_mappings: nil, modified_at: nil, name: nil, remote_data: nil, company_id: nil, id: nil, remote_id: nil, stage_id: nil, user_id: nil)
        @amount = amount
        @created_at = created_at
        @description = description
        @field_mappings = field_mappings
        @modified_at = modified_at
        @name = name
        @remote_data = remote_data
        @company_id = company_id
        @id = id
        @remote_id = remote_id
        @stage_id = stage_id
        @user_id = user_id
      end
    end
  end
end
