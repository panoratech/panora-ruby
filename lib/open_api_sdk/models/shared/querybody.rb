# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class QueryBody < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The query you want to received embeddings and chunks for
      field :query, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('query') } }
      # The number of most appropriate documents for your query.
      field :top_k, T.nilable(::Float), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('topK') } }


      sig { params(query: ::String, top_k: T.nilable(::Float)).void }
      def initialize(query: nil, top_k: nil)
        @query = query
        @top_k = top_k
      end
    end
  end
end
