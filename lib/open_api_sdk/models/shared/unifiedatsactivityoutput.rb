# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class UnifiedAtsActivityOutput < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :created_at, ::OpenApiSDK::Shared::UnifiedAtsActivityOutputCreatedAt, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('created_at') } }

      field :field_mappings, ::OpenApiSDK::Shared::UnifiedAtsActivityOutputFieldMappings, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('field_mappings') } }

      field :modified_at, ::OpenApiSDK::Shared::UnifiedAtsActivityOutputModifiedAt, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('modified_at') } }

      field :remote_data, ::OpenApiSDK::Shared::UnifiedAtsActivityOutputRemoteData, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('remote_data') } }
      # The type of activity
      field :activity_type, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('activity_type') } }
      # The body of the activity
      field :body, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('body') } }
      # The UUID of the candidate
      field :candidate_id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('candidate_id') } }
      # The UUID of the activity
      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('id') } }
      # The remote creation date of the activity
      field :remote_created_at, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('remote_created_at'), 'decoder': Utils.datetime_from_iso_format(true) } }
      # The remote ID of the activity in the context of the 3rd Party
      field :remote_id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('remote_id') } }
      # The subject of the activity
      field :subject, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('subject') } }
      # The visibility of the activity
      field :visibility, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('visibility') } }


      sig { params(created_at: ::OpenApiSDK::Shared::UnifiedAtsActivityOutputCreatedAt, field_mappings: ::OpenApiSDK::Shared::UnifiedAtsActivityOutputFieldMappings, modified_at: ::OpenApiSDK::Shared::UnifiedAtsActivityOutputModifiedAt, remote_data: ::OpenApiSDK::Shared::UnifiedAtsActivityOutputRemoteData, activity_type: T.nilable(::String), body: T.nilable(::String), candidate_id: T.nilable(::String), id: T.nilable(::String), remote_created_at: T.nilable(::DateTime), remote_id: T.nilable(::String), subject: T.nilable(::String), visibility: T.nilable(::String)).void }
      def initialize(created_at: nil, field_mappings: nil, modified_at: nil, remote_data: nil, activity_type: nil, body: nil, candidate_id: nil, id: nil, remote_created_at: nil, remote_id: nil, subject: nil, visibility: nil)
        @created_at = created_at
        @field_mappings = field_mappings
        @modified_at = modified_at
        @remote_data = remote_data
        @activity_type = activity_type
        @body = body
        @candidate_id = candidate_id
        @id = id
        @remote_created_at = remote_created_at
        @remote_id = remote_id
        @subject = subject
        @visibility = visibility
      end
    end
  end
end
