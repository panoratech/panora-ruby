# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class RagQueryOutput < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The chunk which matches the embed query
      field :chunk, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('chunk') } }
      # The embedding of the relevant chunk
      field :embedding, T::Array[::Float], { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('embedding') } }
      # The metadata tied to the chunk
      field :metadata, T::Hash[Symbol, ::Object], { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('metadata') } }
      # The score
      field :score, ::Float, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('score') } }


      sig { params(chunk: ::String, embedding: T::Array[::Float], metadata: T::Hash[Symbol, ::Object], score: ::Float).void }
      def initialize(chunk: nil, embedding: nil, metadata: nil, score: nil)
        @chunk = chunk
        @embedding = embedding
        @metadata = metadata
        @score = score
      end
    end
  end
end
