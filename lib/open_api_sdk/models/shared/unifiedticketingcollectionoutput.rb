# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class UnifiedTicketingCollectionOutput < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :created_at, ::OpenApiSDK::Shared::UnifiedTicketingCollectionOutputCreatedAt, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('created_at') } }

      field :modified_at, ::OpenApiSDK::Shared::UnifiedTicketingCollectionOutputModifiedAt, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('modified_at') } }
      # The name of the collection
      field :name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('name') } }

      field :remote_data, ::OpenApiSDK::Shared::UnifiedTicketingCollectionOutputRemoteData, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('remote_data') } }
      # The type of the collection. Authorized values are either PROJECT or LIST 
      field :collection_type, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('collection_type') } }
      # The description of the collection
      field :description, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('description') } }
      # The UUID of the collection
      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('id') } }
      # The id of the collection in the context of the 3rd Party
      field :remote_id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('remote_id') } }


      sig { params(created_at: ::OpenApiSDK::Shared::UnifiedTicketingCollectionOutputCreatedAt, modified_at: ::OpenApiSDK::Shared::UnifiedTicketingCollectionOutputModifiedAt, name: ::String, remote_data: ::OpenApiSDK::Shared::UnifiedTicketingCollectionOutputRemoteData, collection_type: T.nilable(::String), description: T.nilable(::String), id: T.nilable(::String), remote_id: T.nilable(::String)).void }
      def initialize(created_at: nil, modified_at: nil, name: nil, remote_data: nil, collection_type: nil, description: nil, id: nil, remote_id: nil)
        @created_at = created_at
        @modified_at = modified_at
        @name = name
        @remote_data = remote_data
        @collection_type = collection_type
        @description = description
        @id = id
        @remote_id = remote_id
      end
    end
  end
end
