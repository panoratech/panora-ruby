# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class UnifiedAtsUserOutput < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :created_at, ::OpenApiSDK::Shared::UnifiedAtsUserOutputCreatedAt, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('created_at') } }

      field :field_mappings, ::OpenApiSDK::Shared::UnifiedAtsUserOutputFieldMappings, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('field_mappings') } }

      field :modified_at, ::OpenApiSDK::Shared::UnifiedAtsUserOutputModifiedAt, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('modified_at') } }

      field :remote_data, ::OpenApiSDK::Shared::UnifiedAtsUserOutputRemoteData, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('remote_data') } }
      # The access role of the user
      field :access_role, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('access_role') } }
      # Whether the user is disabled
      field :disabled, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('disabled') } }
      # The email of the user
      field :email, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('email') } }
      # The first name of the user
      field :first_name, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('first_name') } }
      # The UUID of the user
      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('id') } }
      # The last name of the user
      field :last_name, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('last_name') } }
      # The remote creation date of the user
      field :remote_created_at, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('remote_created_at'), 'decoder': Utils.datetime_from_iso_format(true) } }
      # The remote ID of the user in the context of the 3rd Party
      field :remote_id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('remote_id') } }
      # The remote modification date of the user
      field :remote_modified_at, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('remote_modified_at'), 'decoder': Utils.datetime_from_iso_format(true) } }


      sig { params(created_at: ::OpenApiSDK::Shared::UnifiedAtsUserOutputCreatedAt, field_mappings: ::OpenApiSDK::Shared::UnifiedAtsUserOutputFieldMappings, modified_at: ::OpenApiSDK::Shared::UnifiedAtsUserOutputModifiedAt, remote_data: ::OpenApiSDK::Shared::UnifiedAtsUserOutputRemoteData, access_role: T.nilable(::String), disabled: T.nilable(T::Boolean), email: T.nilable(::String), first_name: T.nilable(::String), id: T.nilable(::String), last_name: T.nilable(::String), remote_created_at: T.nilable(::DateTime), remote_id: T.nilable(::String), remote_modified_at: T.nilable(::DateTime)).void }
      def initialize(created_at: nil, field_mappings: nil, modified_at: nil, remote_data: nil, access_role: nil, disabled: nil, email: nil, first_name: nil, id: nil, last_name: nil, remote_created_at: nil, remote_id: nil, remote_modified_at: nil)
        @created_at = created_at
        @field_mappings = field_mappings
        @modified_at = modified_at
        @remote_data = remote_data
        @access_role = access_role
        @disabled = disabled
        @email = email
        @first_name = first_name
        @id = id
        @last_name = last_name
        @remote_created_at = remote_created_at
        @remote_id = remote_id
        @remote_modified_at = remote_modified_at
      end
    end
  end
end
