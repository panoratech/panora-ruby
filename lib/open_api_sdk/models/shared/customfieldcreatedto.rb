# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class CustomFieldCreateDto < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :data_type, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('data_type') } }

      field :description, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('description') } }

      field :linked_user_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('linked_user_id') } }

      field :name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('name') } }

      field :object_type_owner, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('object_type_owner') } }

      field :source_custom_field_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('source_custom_field_id') } }

      field :source_provider, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('source_provider') } }


      sig { params(data_type: ::String, description: ::String, linked_user_id: ::String, name: ::String, object_type_owner: ::String, source_custom_field_id: ::String, source_provider: ::String).void }
      def initialize(data_type: nil, description: nil, linked_user_id: nil, name: nil, object_type_owner: nil, source_custom_field_id: nil, source_provider: nil)
        @data_type = data_type
        @description = description
        @linked_user_id = linked_user_id
        @name = name
        @object_type_owner = object_type_owner
        @source_custom_field_id = source_custom_field_id
        @source_provider = source_provider
      end
    end
  end
end
