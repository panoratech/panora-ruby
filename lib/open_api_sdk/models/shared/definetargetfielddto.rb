# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class DefineTargetFieldDto < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The data type of the target field
      field :data_type, ::OpenApiSDK::Shared::DataType, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('data_type'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Shared::DataType, false) } }
      # The description of the target field
      field :description, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('description') } }
      # The name of the target field
      field :name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('name') } }

      field :object_type_owner, ::OpenApiSDK::Shared::ObjectTypeOwner, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('object_type_owner'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Shared::ObjectTypeOwner, false) } }


      sig { params(data_type: ::OpenApiSDK::Shared::DataType, description: ::String, name: ::String, object_type_owner: ::OpenApiSDK::Shared::ObjectTypeOwner).void }
      def initialize(data_type: nil, description: nil, name: nil, object_type_owner: nil)
        @data_type = data_type
        @description = description
        @name = name
        @object_type_owner = object_type_owner
      end
    end
  end
end
