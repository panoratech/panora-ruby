# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class EventPayload < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The data payload event of the webhook.
      field :data, T::Hash[Symbol, ::Object], { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('data') } }
      # The id of the event.
      field :id_event, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('id_event') } }
      # The type of the event.
      field :type, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('type') } }


      sig { params(data: T::Hash[Symbol, ::Object], id_event: ::String, type: ::String).void }
      def initialize(data: nil, id_event: nil, type: nil)
        @data = data
        @id_event = id_event
        @type = type
      end
    end
  end
end
